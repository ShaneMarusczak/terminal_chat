name: Create Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_release:
    name: Build & Upload Artifacts
    needs: create_release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: tc-linux
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: tc-macos
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: tc-windows.exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename Binary
        run: |
          mkdir -p artifacts
          if [[ "${{ matrix.os }}" == 'windows-latest' ]]; then
            mv target/${{ matrix.target }}/release/tc.exe artifacts/${{ matrix.artifact_name }}
          else
            mv target/${{ matrix.target }}/release/tc artifacts/${{ matrix.artifact_name }}
          fi
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: artifacts/${{ matrix.artifact_name }}

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/${{ matrix.artifact_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
