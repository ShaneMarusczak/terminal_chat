name: Create Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.release_id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_release:
    name: Build & Upload Artifacts
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: ubuntu
            asset_name: tc-linux
          - os: macos-latest
            release_suffix: mac
            asset_name: tc-mac
          - os: windows-latest
            release_suffix: windows
            asset_name: tc-win.exe
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        run: cargo build --release

      - name: Archive the build
        run: |
          ART_DIR=artifacts/${{ matrix.release_suffix }}
          mkdir -p "$ART_DIR"
          if [[ "${{ matrix.os }}" == 'windows-latest' ]]; then
            cp target/release/tc.exe "$ART_DIR"/
          else
            cp target/release/tc "$ART_DIR"/
          fi
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.release_suffix }}-binaries
          path: artifacts/${{ matrix.release_suffix }}/

      - name: Publish Release Asset
        uses: softprops/action-gh-release@v1
        with:
          release_id: ${{ needs.create_release.outputs.release_id }}
          files: artifacts/${{ matrix.release_suffix }}/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
