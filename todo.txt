todos:

Add the ability to prompt for a voice and then play the mp3 and then offer to save it
https://platform.openai.com/docs/api-reference/audio/createSpeech

Try structured outputs and function calling

Experiment with a project refactorer. Give all relevant code files.
Prompt the model to deside things like separation of concerns.
What could should go where. Ask it to ouline src directory.
See if the model can generate all the shell commands to.
Take me from where I am to where you think I should be. (Long shot)

make gf take a dir and then optional extensions like readme
add many files to context at the same time

offer to push code to the clipboard? parse the ``` ```

improve the markdown highlighting, make newlines better

improve CLI use, accept pipe input
-a --ask - takes input as an arg and prints the answer. basically a single message chat
-r --readme - same as in repl
-i --image - same as in repl

add the ability to see costs

customizable developer prompt

Claude?

improve styling of menus

get into homebrew

logo creator - given the project dir make a logo

command autocomplete?

if you type a command without a :,
try to run the line (maybe a variable)
but print "Was that a command?"

offer to print document. save as md or txt and send to lp

themes

make a 'self-correct' mode. prompt a different model
with the models output

give the model the ability to freely read in a given directory

make streaming optional

add the ability to paste in api key for a session

.tc_config to load the users prefered settings
on load, if no config, walk the user through it?
Do you want streaming for eligible models?
Do you want responses pretty printed as markdown?
Which theme do you want?
